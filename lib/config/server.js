module.exports = {
  port: 3000,
  eventsMaxListeners: 100,
  appPath: 'app',
  configPath: 'config',
  modulesPath: 'app/modules',
  publicPath: 'public',
  policiesPath: 'app/policies',
  localesPath: 'app/locales',
  adminLocalesPath: 'app/locales/admin',
  secretKeys: ['REPLACE-ME-1', 'REPLACE-ME-2'],
  bcryptSaltRounds: 10,
  globalPolicies: [],
  helmetEnabled: true,
  modules: {
    configFile: 'module.config.js',
    viewsDir: 'views',
    defaultView: 'index',
    controllersDir: 'controllers',
    modelsDir: 'models',
    servicesDir: 'services',
    helpersDir: 'helpers',
    uiDir: 'ui',
    uiConfig: 'app.config.js',
    uiAdminConfig: 'admin.config.js',
  },
  templates: {
    themesPath: 'app/themes',
    extension: 'ejs',
    templatesDir: 'templates',
    emailsDir: 'emails',
    adminTheme: 'admin',
    defaultTheme: 'standard',
    layoutFile: 'layout',
    errorsDir: 'error',
    defaultErrorView: 'index',
  },
  uploads: {
    serveStaticPath: 'public',
    uploadsPath: 'public/uploads',
    urlPath: '/uploads',
    allowedTypes: [
      'image/png',
      'image/jpg',
      'image/jpeg',
      'image/gif',
      'video/webm',
      'video/mp4',
      'video/x-matroska',
      'application/pdf',
    ],
    maxFileSize: 500 * 1024 * 1024,
    appendTimestamp: true,
  },
  doubleFileExtensions: ['tar'],
  cors: {
    enabled: false,
    options: {},
  },
  session: {
    store: 'cookie', // 'cookie' || can be a relative path 'modules/db/adapters/CustomStore' to custom class that implements destroy, set, get methods
    options: {
      key: 'taboo.sid',
      maxAge: 86400000, // ms = 1 day
      autoCommit: true,
      overwrite: true,
      httpOnly: true,
      signed: true,
      rolling: true,
      renew: false,
      secure: false,
      encrypt: true,
    },
  },
  silentErrors: ['UnauthorizedError', 'BadRequestError', 'ForbiddenError', 'ValidationError', 'NotFoundError'],
  ejsOptions: {
    root: `${process.cwd()}/app/`,
  },
};
